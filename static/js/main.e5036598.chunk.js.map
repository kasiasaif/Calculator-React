{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","className","map","button","index","onClick","evaluate","calculate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAkCeA,EA9BH,WAEV,IAEA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OACE,sBAAKC,UAAU,MAAf,UACE,4CACA,sBAAKA,UAAU,UAAf,UACA,6BAAKF,IAnBM,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAoBnEG,KAAI,SAACC,EAAOC,GACnB,OAAM,wBAAoBL,MAAOI,EAAQE,QAAS,kBAjBxC,SAACF,GAEbH,EADY,UAAXG,EACQ,GACQ,MAAVA,EACEG,YAASP,GAETA,EAAQI,GAWwCI,CAAUJ,IAASF,UAAU,UAA9E,SAAyFE,GAA5EC,aCfZI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5036598.chunk.js","sourcesContent":["import{useState} from \"react\";\nimport{evaluate} from \"mathjs\" ;\nimport './App.css';\n\nconst App = () => {\n\n  const buttons =[\"Clear\",\"+\",\"-\",\"/\",\"0\",\"*\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"=\"]\n\n  const [value,setValue]= useState(\"\")\n\n  const calculate=(button)=>{\n    if(button === \"Clear\"){\n      setValue(\"\")\n    }else if(button=== \"=\"){\n      setValue(evaluate(value))\n    } else{\n      setValue(value + button)\n      \n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <h2>Calculator</h2>\n      <div className=\"wrapper\">\n      <h3>{value}</h3>\n      {buttons.map((button,index)=>{\n        return<button key={index} value={button} onClick={()=> calculate(button)} className=\"buttons\">{button}</button>\n      })}\n  </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}